// <auto-generated />
using System;
using ColonyManager.EfMigrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace ColonyManager.EfMigrations.Migrations
{
    [DbContext(typeof(MigrationDbContext))]
    [Migration("20210422201422_People_Nationality_FKName")]
    partial class People_Nationality_FKName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ColonyManager.Data.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Verified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.Colony", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActualPopulation")
                        .HasColumnType("int");

                    b.Property<Geometry>("Border")
                        .HasColumnType("geography");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ConfigGenericTypeGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigGenericTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("MaxPopulation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConfigGenericTypeGroupId", "ConfigGenericTypeId");

                    b.ToTable("Colonies");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ColonyBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ColonyId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ConfigGenericTypeGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigGenericTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Point>("Location")
                        .HasColumnType("geography");

                    b.HasKey("Id");

                    b.HasIndex("ColonyId");

                    b.HasIndex("ConfigGenericTypeGroupId", "ConfigGenericTypeId");

                    b.ToTable("ColonyBuildings");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ColonyBuildingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ColonyBuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ConfigGenericGroupTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigGenericTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("ColonyBuildingId");

                    b.HasIndex("ConfigGenericGroupTypeId", "ConfigGenericTypeId");

                    b.ToTable("ColonyBuildingRooms");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("RelatedSubject")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("ConfigGenericGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "NATIONALITIES",
                            Comment = "Initial seed",
                            CreatedDate = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Group that contains all the known nationalities",
                            LastUpdatedUserName = "SYSTEM",
                            RelatedSubject = "PEOPLES"
                        });
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericItem", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GroupId", "Id");

                    b.ToTable("ConfigGenericItems");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            Id = 0,
                            Code = "UNK",
                            Comment = "Initial seed",
                            CreatedDate = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Unknown",
                            LastUpdatedUserName = "SYSTEM"
                        });
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericItemExtension", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("SystemDataTypeId")
                        .HasColumnType("int");

                    b.HasKey("GroupId", "ItemId", "Id");

                    b.HasIndex("SystemDataTypeId");

                    b.ToTable("ConfigGenericItemExtentions");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericItemExtensionValue", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("ExtentionId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ItemId", "GroupId", "ExtentionId", "Id");

                    b.HasIndex("ExtentionId", "GroupId", "ItemId");

                    b.ToTable("ConfigGenericItemExtentionValues");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlphaCode2")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("AlphaCode3")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Description")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("NumericCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlphaCode2 = "AF",
                            AlphaCode3 = "AFG",
                            Description = "Afghanistan",
                            NumericCode = "4"
                        },
                        new
                        {
                            Id = 2,
                            AlphaCode2 = "AL",
                            AlphaCode3 = "ALB",
                            Description = "Albania",
                            NumericCode = "8"
                        },
                        new
                        {
                            Id = 3,
                            AlphaCode2 = "DZ",
                            AlphaCode3 = "DZA",
                            Description = "Algeria",
                            NumericCode = "12"
                        },
                        new
                        {
                            Id = 4,
                            AlphaCode2 = "AS",
                            AlphaCode3 = "ASM",
                            Description = "American Samoa",
                            NumericCode = "16"
                        },
                        new
                        {
                            Id = 5,
                            AlphaCode2 = "AD",
                            AlphaCode3 = "AND",
                            Description = "Andorra",
                            NumericCode = "20"
                        },
                        new
                        {
                            Id = 6,
                            AlphaCode2 = "AO",
                            AlphaCode3 = "AGO",
                            Description = "Angola",
                            NumericCode = "24"
                        },
                        new
                        {
                            Id = 7,
                            AlphaCode2 = "AI",
                            AlphaCode3 = "AIA",
                            Description = "Anguilla",
                            NumericCode = "660"
                        },
                        new
                        {
                            Id = 8,
                            AlphaCode2 = "AQ",
                            AlphaCode3 = "ATA",
                            Description = "Antarctica",
                            NumericCode = "10"
                        },
                        new
                        {
                            Id = 9,
                            AlphaCode2 = "AG",
                            AlphaCode3 = "ATG",
                            Description = "Antigua and Barbuda",
                            NumericCode = "28"
                        },
                        new
                        {
                            Id = 10,
                            AlphaCode2 = "AR",
                            AlphaCode3 = "ARG",
                            Description = "Argentina",
                            NumericCode = "32"
                        },
                        new
                        {
                            Id = 11,
                            AlphaCode2 = "AM",
                            AlphaCode3 = "ARM",
                            Description = "Armenia",
                            NumericCode = "51"
                        },
                        new
                        {
                            Id = 12,
                            AlphaCode2 = "AW",
                            AlphaCode3 = "ABW",
                            Description = "Aruba",
                            NumericCode = "533"
                        },
                        new
                        {
                            Id = 13,
                            AlphaCode2 = "AU",
                            AlphaCode3 = "AUS",
                            Description = "Australia",
                            NumericCode = "36"
                        },
                        new
                        {
                            Id = 14,
                            AlphaCode2 = "AT",
                            AlphaCode3 = "AUT",
                            Description = "Austria",
                            NumericCode = "40"
                        },
                        new
                        {
                            Id = 15,
                            AlphaCode2 = "AZ",
                            AlphaCode3 = "AZE",
                            Description = "Azerbaijan",
                            NumericCode = "31"
                        },
                        new
                        {
                            Id = 16,
                            AlphaCode2 = "BS",
                            AlphaCode3 = "BHS",
                            Description = "Bahamas (the)",
                            NumericCode = "44"
                        },
                        new
                        {
                            Id = 17,
                            AlphaCode2 = "BH",
                            AlphaCode3 = "BHR",
                            Description = "Bahrain",
                            NumericCode = "48"
                        },
                        new
                        {
                            Id = 18,
                            AlphaCode2 = "BD",
                            AlphaCode3 = "BGD",
                            Description = "Bangladesh",
                            NumericCode = "50"
                        },
                        new
                        {
                            Id = 19,
                            AlphaCode2 = "BB",
                            AlphaCode3 = "BRB",
                            Description = "Barbados",
                            NumericCode = "52"
                        },
                        new
                        {
                            Id = 20,
                            AlphaCode2 = "BY",
                            AlphaCode3 = "BLR",
                            Description = "Belarus",
                            NumericCode = "112"
                        },
                        new
                        {
                            Id = 21,
                            AlphaCode2 = "BE",
                            AlphaCode3 = "BEL",
                            Description = "Belgium",
                            NumericCode = "56"
                        },
                        new
                        {
                            Id = 22,
                            AlphaCode2 = "BZ",
                            AlphaCode3 = "BLZ",
                            Description = "Belize",
                            NumericCode = "84"
                        },
                        new
                        {
                            Id = 23,
                            AlphaCode2 = "BJ",
                            AlphaCode3 = "BEN",
                            Description = "Benin",
                            NumericCode = "204"
                        },
                        new
                        {
                            Id = 24,
                            AlphaCode2 = "BM",
                            AlphaCode3 = "BMU",
                            Description = "Bermuda",
                            NumericCode = "60"
                        },
                        new
                        {
                            Id = 25,
                            AlphaCode2 = "BT",
                            AlphaCode3 = "BTN",
                            Description = "Bhutan",
                            NumericCode = "64"
                        },
                        new
                        {
                            Id = 26,
                            AlphaCode2 = "BO",
                            AlphaCode3 = "BOL",
                            Description = "Bolivia (Plurinational State of)",
                            NumericCode = "68"
                        },
                        new
                        {
                            Id = 27,
                            AlphaCode2 = "BQ",
                            AlphaCode3 = "BES",
                            Description = "Bonaire, Sint Eustatius and Saba",
                            NumericCode = "535"
                        },
                        new
                        {
                            Id = 28,
                            AlphaCode2 = "BA",
                            AlphaCode3 = "BIH",
                            Description = "Bosnia and Herzegovina",
                            NumericCode = "70"
                        },
                        new
                        {
                            Id = 29,
                            AlphaCode2 = "BW",
                            AlphaCode3 = "BWA",
                            Description = "Botswana",
                            NumericCode = "72"
                        },
                        new
                        {
                            Id = 30,
                            AlphaCode2 = "BV",
                            AlphaCode3 = "BVT",
                            Description = "Bouvet Island",
                            NumericCode = "74"
                        },
                        new
                        {
                            Id = 31,
                            AlphaCode2 = "BR",
                            AlphaCode3 = "BRA",
                            Description = "Brazil",
                            NumericCode = "76"
                        },
                        new
                        {
                            Id = 32,
                            AlphaCode2 = "IO",
                            AlphaCode3 = "IOT",
                            Description = "British Indian Ocean Territory (the)",
                            NumericCode = "86"
                        },
                        new
                        {
                            Id = 33,
                            AlphaCode2 = "BN",
                            AlphaCode3 = "BRN",
                            Description = "Brunei Darussalam",
                            NumericCode = "96"
                        },
                        new
                        {
                            Id = 34,
                            AlphaCode2 = "BG",
                            AlphaCode3 = "BGR",
                            Description = "Bulgaria",
                            NumericCode = "100"
                        },
                        new
                        {
                            Id = 35,
                            AlphaCode2 = "BF",
                            AlphaCode3 = "BFA",
                            Description = "Burkina Faso",
                            NumericCode = "854"
                        },
                        new
                        {
                            Id = 36,
                            AlphaCode2 = "BI",
                            AlphaCode3 = "BDI",
                            Description = "Burundi",
                            NumericCode = "108"
                        },
                        new
                        {
                            Id = 37,
                            AlphaCode2 = "CV",
                            AlphaCode3 = "CPV",
                            Description = "Cabo Verde",
                            NumericCode = "132"
                        },
                        new
                        {
                            Id = 38,
                            AlphaCode2 = "KH",
                            AlphaCode3 = "KHM",
                            Description = "Cambodia",
                            NumericCode = "116"
                        },
                        new
                        {
                            Id = 39,
                            AlphaCode2 = "CM",
                            AlphaCode3 = "CMR",
                            Description = "Cameroon",
                            NumericCode = "120"
                        },
                        new
                        {
                            Id = 40,
                            AlphaCode2 = "CA",
                            AlphaCode3 = "CAN",
                            Description = "Canada",
                            NumericCode = "124"
                        },
                        new
                        {
                            Id = 41,
                            AlphaCode2 = "KY",
                            AlphaCode3 = "CYM",
                            Description = "Cayman Islands (the)",
                            NumericCode = "136"
                        },
                        new
                        {
                            Id = 42,
                            AlphaCode2 = "CF",
                            AlphaCode3 = "CAF",
                            Description = "Central African Republic (the)",
                            NumericCode = "140"
                        },
                        new
                        {
                            Id = 43,
                            AlphaCode2 = "TD",
                            AlphaCode3 = "TCD",
                            Description = "Chad",
                            NumericCode = "148"
                        },
                        new
                        {
                            Id = 44,
                            AlphaCode2 = "CL",
                            AlphaCode3 = "CHL",
                            Description = "Chile",
                            NumericCode = "152"
                        },
                        new
                        {
                            Id = 45,
                            AlphaCode2 = "CN",
                            AlphaCode3 = "CHN",
                            Description = "China",
                            NumericCode = "156"
                        },
                        new
                        {
                            Id = 46,
                            AlphaCode2 = "CX",
                            AlphaCode3 = "CXR",
                            Description = "Christmas Island",
                            NumericCode = "162"
                        },
                        new
                        {
                            Id = 47,
                            AlphaCode2 = "CC",
                            AlphaCode3 = "CCK",
                            Description = "Cocos (Keeling) Islands (the)",
                            NumericCode = "166"
                        },
                        new
                        {
                            Id = 48,
                            AlphaCode2 = "CO",
                            AlphaCode3 = "COL",
                            Description = "Colombia",
                            NumericCode = "170"
                        },
                        new
                        {
                            Id = 49,
                            AlphaCode2 = "KM",
                            AlphaCode3 = "COM",
                            Description = "Comoros (the)",
                            NumericCode = "174"
                        },
                        new
                        {
                            Id = 50,
                            AlphaCode2 = "CD",
                            AlphaCode3 = "COD",
                            Description = "Congo (the Democratic Republic of the)",
                            NumericCode = "180"
                        },
                        new
                        {
                            Id = 51,
                            AlphaCode2 = "CG",
                            AlphaCode3 = "COG",
                            Description = "Congo (the)",
                            NumericCode = "178"
                        },
                        new
                        {
                            Id = 52,
                            AlphaCode2 = "CK",
                            AlphaCode3 = "COK",
                            Description = "Cook Islands (the)",
                            NumericCode = "184"
                        },
                        new
                        {
                            Id = 53,
                            AlphaCode2 = "CR",
                            AlphaCode3 = "CRI",
                            Description = "Costa Rica",
                            NumericCode = "188"
                        },
                        new
                        {
                            Id = 54,
                            AlphaCode2 = "HR",
                            AlphaCode3 = "HRV",
                            Description = "Croatia",
                            NumericCode = "191"
                        },
                        new
                        {
                            Id = 55,
                            AlphaCode2 = "CU",
                            AlphaCode3 = "CUB",
                            Description = "Cuba",
                            NumericCode = "192"
                        },
                        new
                        {
                            Id = 56,
                            AlphaCode2 = "CW",
                            AlphaCode3 = "CUW",
                            Description = "Curaçao",
                            NumericCode = "531"
                        },
                        new
                        {
                            Id = 57,
                            AlphaCode2 = "CY",
                            AlphaCode3 = "CYP",
                            Description = "Cyprus",
                            NumericCode = "196"
                        },
                        new
                        {
                            Id = 58,
                            AlphaCode2 = "CZ",
                            AlphaCode3 = "CZE",
                            Description = "Czechia",
                            NumericCode = "203"
                        },
                        new
                        {
                            Id = 59,
                            AlphaCode2 = "CI",
                            AlphaCode3 = "CIV",
                            Description = "Côte d'Ivoire",
                            NumericCode = "384"
                        },
                        new
                        {
                            Id = 60,
                            AlphaCode2 = "DK",
                            AlphaCode3 = "DNK",
                            Description = "Denmark",
                            NumericCode = "208"
                        },
                        new
                        {
                            Id = 61,
                            AlphaCode2 = "DJ",
                            AlphaCode3 = "DJI",
                            Description = "Djibouti",
                            NumericCode = "262"
                        },
                        new
                        {
                            Id = 62,
                            AlphaCode2 = "DM",
                            AlphaCode3 = "DMA",
                            Description = "Dominica",
                            NumericCode = "212"
                        },
                        new
                        {
                            Id = 63,
                            AlphaCode2 = "DO",
                            AlphaCode3 = "DOM",
                            Description = "Dominican Republic (the)",
                            NumericCode = "214"
                        },
                        new
                        {
                            Id = 64,
                            AlphaCode2 = "EC",
                            AlphaCode3 = "ECU",
                            Description = "Ecuador",
                            NumericCode = "218"
                        },
                        new
                        {
                            Id = 65,
                            AlphaCode2 = "EG",
                            AlphaCode3 = "EGY",
                            Description = "Egypt",
                            NumericCode = "818"
                        },
                        new
                        {
                            Id = 66,
                            AlphaCode2 = "SV",
                            AlphaCode3 = "SLV",
                            Description = "El Salvador",
                            NumericCode = "222"
                        },
                        new
                        {
                            Id = 67,
                            AlphaCode2 = "GQ",
                            AlphaCode3 = "GNQ",
                            Description = "Equatorial Guinea",
                            NumericCode = "226"
                        },
                        new
                        {
                            Id = 68,
                            AlphaCode2 = "ER",
                            AlphaCode3 = "ERI",
                            Description = "Eritrea",
                            NumericCode = "232"
                        },
                        new
                        {
                            Id = 69,
                            AlphaCode2 = "EE",
                            AlphaCode3 = "EST",
                            Description = "Estonia",
                            NumericCode = "233"
                        },
                        new
                        {
                            Id = 70,
                            AlphaCode2 = "SZ",
                            AlphaCode3 = "SWZ",
                            Description = "Eswatini",
                            NumericCode = "748"
                        },
                        new
                        {
                            Id = 71,
                            AlphaCode2 = "ET",
                            AlphaCode3 = "ETH",
                            Description = "Ethiopia",
                            NumericCode = "231"
                        },
                        new
                        {
                            Id = 72,
                            AlphaCode2 = "FK",
                            AlphaCode3 = "FLK",
                            Description = "Falkland Islands (the) [Malvinas]",
                            NumericCode = "238"
                        },
                        new
                        {
                            Id = 73,
                            AlphaCode2 = "FO",
                            AlphaCode3 = "FRO",
                            Description = "Faroe Islands (the)",
                            NumericCode = "234"
                        },
                        new
                        {
                            Id = 74,
                            AlphaCode2 = "FJ",
                            AlphaCode3 = "FJI",
                            Description = "Fiji",
                            NumericCode = "242"
                        },
                        new
                        {
                            Id = 75,
                            AlphaCode2 = "FI",
                            AlphaCode3 = "FIN",
                            Description = "Finland",
                            NumericCode = "246"
                        },
                        new
                        {
                            Id = 76,
                            AlphaCode2 = "FR",
                            AlphaCode3 = "FRA",
                            Description = "France",
                            NumericCode = "250"
                        },
                        new
                        {
                            Id = 77,
                            AlphaCode2 = "GF",
                            AlphaCode3 = "GUF",
                            Description = "French Guiana",
                            NumericCode = "254"
                        },
                        new
                        {
                            Id = 78,
                            AlphaCode2 = "PF",
                            AlphaCode3 = "PYF",
                            Description = "French Polynesia",
                            NumericCode = "258"
                        },
                        new
                        {
                            Id = 79,
                            AlphaCode2 = "TF",
                            AlphaCode3 = "ATF",
                            Description = "French Southern Territories (the)",
                            NumericCode = "260"
                        },
                        new
                        {
                            Id = 80,
                            AlphaCode2 = "GA",
                            AlphaCode3 = "GAB",
                            Description = "Gabon",
                            NumericCode = "266"
                        },
                        new
                        {
                            Id = 81,
                            AlphaCode2 = "GM",
                            AlphaCode3 = "GMB",
                            Description = "Gambia (the)",
                            NumericCode = "270"
                        },
                        new
                        {
                            Id = 82,
                            AlphaCode2 = "GE",
                            AlphaCode3 = "GEO",
                            Description = "Georgia",
                            NumericCode = "268"
                        },
                        new
                        {
                            Id = 83,
                            AlphaCode2 = "DE",
                            AlphaCode3 = "DEU",
                            Description = "Germany",
                            NumericCode = "276"
                        },
                        new
                        {
                            Id = 84,
                            AlphaCode2 = "GH",
                            AlphaCode3 = "GHA",
                            Description = "Ghana",
                            NumericCode = "288"
                        },
                        new
                        {
                            Id = 85,
                            AlphaCode2 = "GI",
                            AlphaCode3 = "GIB",
                            Description = "Gibraltar",
                            NumericCode = "292"
                        },
                        new
                        {
                            Id = 86,
                            AlphaCode2 = "GR",
                            AlphaCode3 = "GRC",
                            Description = "Greece",
                            NumericCode = "300"
                        },
                        new
                        {
                            Id = 87,
                            AlphaCode2 = "GL",
                            AlphaCode3 = "GRL",
                            Description = "Greenland",
                            NumericCode = "304"
                        },
                        new
                        {
                            Id = 88,
                            AlphaCode2 = "GD",
                            AlphaCode3 = "GRD",
                            Description = "Grenada",
                            NumericCode = "308"
                        },
                        new
                        {
                            Id = 89,
                            AlphaCode2 = "GP",
                            AlphaCode3 = "GLP",
                            Description = "Guadeloupe",
                            NumericCode = "312"
                        },
                        new
                        {
                            Id = 90,
                            AlphaCode2 = "GU",
                            AlphaCode3 = "GUM",
                            Description = "Guam",
                            NumericCode = "316"
                        },
                        new
                        {
                            Id = 91,
                            AlphaCode2 = "GT",
                            AlphaCode3 = "GTM",
                            Description = "Guatemala",
                            NumericCode = "320"
                        },
                        new
                        {
                            Id = 92,
                            AlphaCode2 = "GG",
                            AlphaCode3 = "GGY",
                            Description = "Guernsey",
                            NumericCode = "831"
                        },
                        new
                        {
                            Id = 93,
                            AlphaCode2 = "GN",
                            AlphaCode3 = "GIN",
                            Description = "Guinea",
                            NumericCode = "324"
                        },
                        new
                        {
                            Id = 94,
                            AlphaCode2 = "GW",
                            AlphaCode3 = "GNB",
                            Description = "Guinea-Bissau",
                            NumericCode = "624"
                        },
                        new
                        {
                            Id = 95,
                            AlphaCode2 = "GY",
                            AlphaCode3 = "GUY",
                            Description = "Guyana",
                            NumericCode = "328"
                        },
                        new
                        {
                            Id = 96,
                            AlphaCode2 = "HT",
                            AlphaCode3 = "HTI",
                            Description = "Haiti",
                            NumericCode = "332"
                        },
                        new
                        {
                            Id = 97,
                            AlphaCode2 = "HM",
                            AlphaCode3 = "HMD",
                            Description = "Heard Island and McDonald Islands",
                            NumericCode = "334"
                        },
                        new
                        {
                            Id = 98,
                            AlphaCode2 = "VA",
                            AlphaCode3 = "VAT",
                            Description = "Holy See (the)",
                            NumericCode = "336"
                        },
                        new
                        {
                            Id = 99,
                            AlphaCode2 = "HN",
                            AlphaCode3 = "HND",
                            Description = "Honduras",
                            NumericCode = "340"
                        },
                        new
                        {
                            Id = 100,
                            AlphaCode2 = "HK",
                            AlphaCode3 = "HKG",
                            Description = "Hong Kong",
                            NumericCode = "344"
                        },
                        new
                        {
                            Id = 101,
                            AlphaCode2 = "HU",
                            AlphaCode3 = "HUN",
                            Description = "Hungary",
                            NumericCode = "348"
                        },
                        new
                        {
                            Id = 102,
                            AlphaCode2 = "IS",
                            AlphaCode3 = "ISL",
                            Description = "Iceland",
                            NumericCode = "352"
                        },
                        new
                        {
                            Id = 103,
                            AlphaCode2 = "IN",
                            AlphaCode3 = "IND",
                            Description = "India",
                            NumericCode = "356"
                        },
                        new
                        {
                            Id = 104,
                            AlphaCode2 = "ID",
                            AlphaCode3 = "IDN",
                            Description = "Indonesia",
                            NumericCode = "360"
                        },
                        new
                        {
                            Id = 105,
                            AlphaCode2 = "IR",
                            AlphaCode3 = "IRN",
                            Description = "Iran (Islamic Republic of)",
                            NumericCode = "364"
                        },
                        new
                        {
                            Id = 106,
                            AlphaCode2 = "IQ",
                            AlphaCode3 = "IRQ",
                            Description = "Iraq",
                            NumericCode = "368"
                        },
                        new
                        {
                            Id = 107,
                            AlphaCode2 = "IE",
                            AlphaCode3 = "IRL",
                            Description = "Ireland",
                            NumericCode = "372"
                        },
                        new
                        {
                            Id = 108,
                            AlphaCode2 = "IM",
                            AlphaCode3 = "IMN",
                            Description = "Isle of Man",
                            NumericCode = "833"
                        },
                        new
                        {
                            Id = 109,
                            AlphaCode2 = "IL",
                            AlphaCode3 = "ISR",
                            Description = "Israel",
                            NumericCode = "376"
                        },
                        new
                        {
                            Id = 110,
                            AlphaCode2 = "IT",
                            AlphaCode3 = "ITA",
                            Description = "Italy",
                            NumericCode = "380"
                        },
                        new
                        {
                            Id = 111,
                            AlphaCode2 = "JM",
                            AlphaCode3 = "JAM",
                            Description = "Jamaica",
                            NumericCode = "388"
                        },
                        new
                        {
                            Id = 112,
                            AlphaCode2 = "JP",
                            AlphaCode3 = "JPN",
                            Description = "Japan",
                            NumericCode = "392"
                        },
                        new
                        {
                            Id = 113,
                            AlphaCode2 = "JE",
                            AlphaCode3 = "JEY",
                            Description = "Jersey",
                            NumericCode = "832"
                        },
                        new
                        {
                            Id = 114,
                            AlphaCode2 = "JO",
                            AlphaCode3 = "JOR",
                            Description = "Jordan",
                            NumericCode = "400"
                        },
                        new
                        {
                            Id = 115,
                            AlphaCode2 = "KZ",
                            AlphaCode3 = "KAZ",
                            Description = "Kazakhstan",
                            NumericCode = "398"
                        },
                        new
                        {
                            Id = 116,
                            AlphaCode2 = "KE",
                            AlphaCode3 = "KEN",
                            Description = "Kenya",
                            NumericCode = "404"
                        },
                        new
                        {
                            Id = 117,
                            AlphaCode2 = "KI",
                            AlphaCode3 = "KIR",
                            Description = "Kiribati",
                            NumericCode = "296"
                        },
                        new
                        {
                            Id = 118,
                            AlphaCode2 = "KP",
                            AlphaCode3 = "PRK",
                            Description = "Korea (the Democratic People's Republic of)",
                            NumericCode = "408"
                        },
                        new
                        {
                            Id = 119,
                            AlphaCode2 = "KR",
                            AlphaCode3 = "KOR",
                            Description = "Korea (the Republic of)",
                            NumericCode = "410"
                        },
                        new
                        {
                            Id = 120,
                            AlphaCode2 = "KW",
                            AlphaCode3 = "KWT",
                            Description = "Kuwait",
                            NumericCode = "414"
                        },
                        new
                        {
                            Id = 121,
                            AlphaCode2 = "KG",
                            AlphaCode3 = "KGZ",
                            Description = "Kyrgyzstan",
                            NumericCode = "417"
                        },
                        new
                        {
                            Id = 122,
                            AlphaCode2 = "LA",
                            AlphaCode3 = "LAO",
                            Description = "Lao People's Democratic Republic (the)",
                            NumericCode = "418"
                        },
                        new
                        {
                            Id = 123,
                            AlphaCode2 = "LV",
                            AlphaCode3 = "LVA",
                            Description = "Latvia",
                            NumericCode = "428"
                        },
                        new
                        {
                            Id = 124,
                            AlphaCode2 = "LB",
                            AlphaCode3 = "LBN",
                            Description = "Lebanon",
                            NumericCode = "422"
                        },
                        new
                        {
                            Id = 125,
                            AlphaCode2 = "LS",
                            AlphaCode3 = "LSO",
                            Description = "Lesotho",
                            NumericCode = "426"
                        },
                        new
                        {
                            Id = 126,
                            AlphaCode2 = "LR",
                            AlphaCode3 = "LBR",
                            Description = "Liberia",
                            NumericCode = "430"
                        },
                        new
                        {
                            Id = 127,
                            AlphaCode2 = "LY",
                            AlphaCode3 = "LBY",
                            Description = "Libya",
                            NumericCode = "434"
                        },
                        new
                        {
                            Id = 128,
                            AlphaCode2 = "LI",
                            AlphaCode3 = "LIE",
                            Description = "Liechtenstein",
                            NumericCode = "438"
                        },
                        new
                        {
                            Id = 129,
                            AlphaCode2 = "LT",
                            AlphaCode3 = "LTU",
                            Description = "Lithuania",
                            NumericCode = "440"
                        },
                        new
                        {
                            Id = 130,
                            AlphaCode2 = "LU",
                            AlphaCode3 = "LUX",
                            Description = "Luxembourg",
                            NumericCode = "442"
                        },
                        new
                        {
                            Id = 131,
                            AlphaCode2 = "MO",
                            AlphaCode3 = "MAC",
                            Description = "Macao",
                            NumericCode = "446"
                        },
                        new
                        {
                            Id = 132,
                            AlphaCode2 = "MG",
                            AlphaCode3 = "MDG",
                            Description = "Madagascar",
                            NumericCode = "450"
                        },
                        new
                        {
                            Id = 133,
                            AlphaCode2 = "MW",
                            AlphaCode3 = "MWI",
                            Description = "Malawi",
                            NumericCode = "454"
                        },
                        new
                        {
                            Id = 134,
                            AlphaCode2 = "MY",
                            AlphaCode3 = "MYS",
                            Description = "Malaysia",
                            NumericCode = "458"
                        },
                        new
                        {
                            Id = 135,
                            AlphaCode2 = "MV",
                            AlphaCode3 = "MDV",
                            Description = "Maldives",
                            NumericCode = "462"
                        },
                        new
                        {
                            Id = 136,
                            AlphaCode2 = "ML",
                            AlphaCode3 = "MLI",
                            Description = "Mali",
                            NumericCode = "466"
                        },
                        new
                        {
                            Id = 137,
                            AlphaCode2 = "MT",
                            AlphaCode3 = "MLT",
                            Description = "Malta",
                            NumericCode = "470"
                        },
                        new
                        {
                            Id = 138,
                            AlphaCode2 = "MH",
                            AlphaCode3 = "MHL",
                            Description = "Marshall Islands (the)",
                            NumericCode = "584"
                        },
                        new
                        {
                            Id = 139,
                            AlphaCode2 = "MQ",
                            AlphaCode3 = "MTQ",
                            Description = "Martinique",
                            NumericCode = "474"
                        },
                        new
                        {
                            Id = 140,
                            AlphaCode2 = "MR",
                            AlphaCode3 = "MRT",
                            Description = "Mauritania",
                            NumericCode = "478"
                        },
                        new
                        {
                            Id = 141,
                            AlphaCode2 = "MU",
                            AlphaCode3 = "MUS",
                            Description = "Mauritius",
                            NumericCode = "480"
                        },
                        new
                        {
                            Id = 142,
                            AlphaCode2 = "YT",
                            AlphaCode3 = "MYT",
                            Description = "Mayotte",
                            NumericCode = "175"
                        },
                        new
                        {
                            Id = 143,
                            AlphaCode2 = "MX",
                            AlphaCode3 = "MEX",
                            Description = "Mexico",
                            NumericCode = "484"
                        },
                        new
                        {
                            Id = 144,
                            AlphaCode2 = "FM",
                            AlphaCode3 = "FSM",
                            Description = "Micronesia (Federated States of)",
                            NumericCode = "583"
                        },
                        new
                        {
                            Id = 145,
                            AlphaCode2 = "MD",
                            AlphaCode3 = "MDA",
                            Description = "Moldova (the Republic of)",
                            NumericCode = "498"
                        },
                        new
                        {
                            Id = 146,
                            AlphaCode2 = "MC",
                            AlphaCode3 = "MCO",
                            Description = "Monaco",
                            NumericCode = "492"
                        },
                        new
                        {
                            Id = 147,
                            AlphaCode2 = "MN",
                            AlphaCode3 = "MNG",
                            Description = "Mongolia",
                            NumericCode = "496"
                        },
                        new
                        {
                            Id = 148,
                            AlphaCode2 = "ME",
                            AlphaCode3 = "MNE",
                            Description = "Montenegro",
                            NumericCode = "499"
                        },
                        new
                        {
                            Id = 149,
                            AlphaCode2 = "MS",
                            AlphaCode3 = "MSR",
                            Description = "Montserrat",
                            NumericCode = "500"
                        },
                        new
                        {
                            Id = 150,
                            AlphaCode2 = "MA",
                            AlphaCode3 = "MAR",
                            Description = "Morocco",
                            NumericCode = "504"
                        },
                        new
                        {
                            Id = 151,
                            AlphaCode2 = "MZ",
                            AlphaCode3 = "MOZ",
                            Description = "Mozambique",
                            NumericCode = "508"
                        },
                        new
                        {
                            Id = 152,
                            AlphaCode2 = "MM",
                            AlphaCode3 = "MMR",
                            Description = "Myanmar",
                            NumericCode = "104"
                        },
                        new
                        {
                            Id = 153,
                            AlphaCode2 = "NA",
                            AlphaCode3 = "NAM",
                            Description = "Namibia",
                            NumericCode = "516"
                        },
                        new
                        {
                            Id = 154,
                            AlphaCode2 = "NR",
                            AlphaCode3 = "NRU",
                            Description = "Nauru",
                            NumericCode = "520"
                        },
                        new
                        {
                            Id = 155,
                            AlphaCode2 = "NP",
                            AlphaCode3 = "NPL",
                            Description = "Nepal",
                            NumericCode = "524"
                        },
                        new
                        {
                            Id = 156,
                            AlphaCode2 = "NL",
                            AlphaCode3 = "NLD",
                            Description = "Netherlands (the)",
                            NumericCode = "528"
                        },
                        new
                        {
                            Id = 157,
                            AlphaCode2 = "NC",
                            AlphaCode3 = "NCL",
                            Description = "New Caledonia",
                            NumericCode = "540"
                        },
                        new
                        {
                            Id = 158,
                            AlphaCode2 = "NZ",
                            AlphaCode3 = "NZL",
                            Description = "New Zealand",
                            NumericCode = "554"
                        },
                        new
                        {
                            Id = 159,
                            AlphaCode2 = "NI",
                            AlphaCode3 = "NIC",
                            Description = "Nicaragua",
                            NumericCode = "558"
                        },
                        new
                        {
                            Id = 160,
                            AlphaCode2 = "NE",
                            AlphaCode3 = "NER",
                            Description = "Niger (the)",
                            NumericCode = "562"
                        },
                        new
                        {
                            Id = 161,
                            AlphaCode2 = "NG",
                            AlphaCode3 = "NGA",
                            Description = "Nigeria",
                            NumericCode = "566"
                        },
                        new
                        {
                            Id = 162,
                            AlphaCode2 = "NU",
                            AlphaCode3 = "NIU",
                            Description = "Niue",
                            NumericCode = "570"
                        },
                        new
                        {
                            Id = 163,
                            AlphaCode2 = "NF",
                            AlphaCode3 = "NFK",
                            Description = "Norfolk Island",
                            NumericCode = "574"
                        },
                        new
                        {
                            Id = 164,
                            AlphaCode2 = "MP",
                            AlphaCode3 = "MNP",
                            Description = "Northern Mariana Islands (the)",
                            NumericCode = "580"
                        },
                        new
                        {
                            Id = 165,
                            AlphaCode2 = "NO",
                            AlphaCode3 = "NOR",
                            Description = "Norway",
                            NumericCode = "578"
                        },
                        new
                        {
                            Id = 166,
                            AlphaCode2 = "OM",
                            AlphaCode3 = "OMN",
                            Description = "Oman",
                            NumericCode = "512"
                        },
                        new
                        {
                            Id = 167,
                            AlphaCode2 = "PK",
                            AlphaCode3 = "PAK",
                            Description = "Pakistan",
                            NumericCode = "586"
                        },
                        new
                        {
                            Id = 168,
                            AlphaCode2 = "PW",
                            AlphaCode3 = "PLW",
                            Description = "Palau",
                            NumericCode = "585"
                        },
                        new
                        {
                            Id = 169,
                            AlphaCode2 = "PS",
                            AlphaCode3 = "PSE",
                            Description = "Palestine, State of",
                            NumericCode = "275"
                        },
                        new
                        {
                            Id = 170,
                            AlphaCode2 = "PA",
                            AlphaCode3 = "PAN",
                            Description = "Panama",
                            NumericCode = "591"
                        },
                        new
                        {
                            Id = 171,
                            AlphaCode2 = "PG",
                            AlphaCode3 = "PNG",
                            Description = "Papua New Guinea",
                            NumericCode = "598"
                        },
                        new
                        {
                            Id = 172,
                            AlphaCode2 = "PY",
                            AlphaCode3 = "PRY",
                            Description = "Paraguay",
                            NumericCode = "600"
                        },
                        new
                        {
                            Id = 173,
                            AlphaCode2 = "PE",
                            AlphaCode3 = "PER",
                            Description = "Peru",
                            NumericCode = "604"
                        },
                        new
                        {
                            Id = 174,
                            AlphaCode2 = "PH",
                            AlphaCode3 = "PHL",
                            Description = "Philippines (the)",
                            NumericCode = "608"
                        },
                        new
                        {
                            Id = 175,
                            AlphaCode2 = "PN",
                            AlphaCode3 = "PCN",
                            Description = "Pitcairn",
                            NumericCode = "612"
                        },
                        new
                        {
                            Id = 176,
                            AlphaCode2 = "PL",
                            AlphaCode3 = "POL",
                            Description = "Poland",
                            NumericCode = "616"
                        },
                        new
                        {
                            Id = 177,
                            AlphaCode2 = "PT",
                            AlphaCode3 = "PRT",
                            Description = "Portugal",
                            NumericCode = "620"
                        },
                        new
                        {
                            Id = 178,
                            AlphaCode2 = "PR",
                            AlphaCode3 = "PRI",
                            Description = "Puerto Rico",
                            NumericCode = "630"
                        },
                        new
                        {
                            Id = 179,
                            AlphaCode2 = "QA",
                            AlphaCode3 = "QAT",
                            Description = "Qatar",
                            NumericCode = "634"
                        },
                        new
                        {
                            Id = 180,
                            AlphaCode2 = "MK",
                            AlphaCode3 = "MKD",
                            Description = "Republic of North Macedonia",
                            NumericCode = "807"
                        },
                        new
                        {
                            Id = 181,
                            AlphaCode2 = "RO",
                            AlphaCode3 = "ROU",
                            Description = "Romania",
                            NumericCode = "642"
                        },
                        new
                        {
                            Id = 182,
                            AlphaCode2 = "RU",
                            AlphaCode3 = "RUS",
                            Description = "Russian Federation (the)",
                            NumericCode = "643"
                        },
                        new
                        {
                            Id = 183,
                            AlphaCode2 = "RW",
                            AlphaCode3 = "RWA",
                            Description = "Rwanda",
                            NumericCode = "646"
                        },
                        new
                        {
                            Id = 184,
                            AlphaCode2 = "RE",
                            AlphaCode3 = "REU",
                            Description = "Réunion",
                            NumericCode = "638"
                        },
                        new
                        {
                            Id = 185,
                            AlphaCode2 = "BL",
                            AlphaCode3 = "BLM",
                            Description = "Saint Barthélemy",
                            NumericCode = "652"
                        },
                        new
                        {
                            Id = 186,
                            AlphaCode2 = "SH",
                            AlphaCode3 = "SHN",
                            Description = "Saint Helena, Ascension and Tristan da Cunha",
                            NumericCode = "654"
                        },
                        new
                        {
                            Id = 187,
                            AlphaCode2 = "KN",
                            AlphaCode3 = "KNA",
                            Description = "Saint Kitts and Nevis",
                            NumericCode = "659"
                        },
                        new
                        {
                            Id = 188,
                            AlphaCode2 = "LC",
                            AlphaCode3 = "LCA",
                            Description = "Saint Lucia",
                            NumericCode = "662"
                        },
                        new
                        {
                            Id = 189,
                            AlphaCode2 = "MF",
                            AlphaCode3 = "MAF",
                            Description = "Saint Martin (French part)",
                            NumericCode = "663"
                        },
                        new
                        {
                            Id = 190,
                            AlphaCode2 = "PM",
                            AlphaCode3 = "SPM",
                            Description = "Saint Pierre and Miquelon",
                            NumericCode = "666"
                        },
                        new
                        {
                            Id = 191,
                            AlphaCode2 = "VC",
                            AlphaCode3 = "VCT",
                            Description = "Saint Vincent and the Grenadines",
                            NumericCode = "670"
                        },
                        new
                        {
                            Id = 192,
                            AlphaCode2 = "WS",
                            AlphaCode3 = "WSM",
                            Description = "Samoa",
                            NumericCode = "882"
                        },
                        new
                        {
                            Id = 193,
                            AlphaCode2 = "SM",
                            AlphaCode3 = "SMR",
                            Description = "San Marino",
                            NumericCode = "674"
                        },
                        new
                        {
                            Id = 194,
                            AlphaCode2 = "ST",
                            AlphaCode3 = "STP",
                            Description = "Sao Tome and Principe",
                            NumericCode = "678"
                        },
                        new
                        {
                            Id = 195,
                            AlphaCode2 = "SA",
                            AlphaCode3 = "SAU",
                            Description = "Saudi Arabia",
                            NumericCode = "682"
                        },
                        new
                        {
                            Id = 196,
                            AlphaCode2 = "SN",
                            AlphaCode3 = "SEN",
                            Description = "Senegal",
                            NumericCode = "686"
                        },
                        new
                        {
                            Id = 197,
                            AlphaCode2 = "RS",
                            AlphaCode3 = "SRB",
                            Description = "Serbia",
                            NumericCode = "688"
                        },
                        new
                        {
                            Id = 198,
                            AlphaCode2 = "SC",
                            AlphaCode3 = "SYC",
                            Description = "Seychelles",
                            NumericCode = "690"
                        },
                        new
                        {
                            Id = 199,
                            AlphaCode2 = "SL",
                            AlphaCode3 = "SLE",
                            Description = "Sierra Leone",
                            NumericCode = "694"
                        },
                        new
                        {
                            Id = 200,
                            AlphaCode2 = "SG",
                            AlphaCode3 = "SGP",
                            Description = "Singapore",
                            NumericCode = "702"
                        },
                        new
                        {
                            Id = 201,
                            AlphaCode2 = "SX",
                            AlphaCode3 = "SXM",
                            Description = "Sint Maarten (Dutch part)",
                            NumericCode = "534"
                        },
                        new
                        {
                            Id = 202,
                            AlphaCode2 = "SK",
                            AlphaCode3 = "SVK",
                            Description = "Slovakia",
                            NumericCode = "703"
                        },
                        new
                        {
                            Id = 203,
                            AlphaCode2 = "SI",
                            AlphaCode3 = "SVN",
                            Description = "Slovenia",
                            NumericCode = "705"
                        },
                        new
                        {
                            Id = 204,
                            AlphaCode2 = "SB",
                            AlphaCode3 = "SLB",
                            Description = "Solomon Islands",
                            NumericCode = "90"
                        },
                        new
                        {
                            Id = 205,
                            AlphaCode2 = "SO",
                            AlphaCode3 = "SOM",
                            Description = "Somalia",
                            NumericCode = "706"
                        },
                        new
                        {
                            Id = 206,
                            AlphaCode2 = "ZA",
                            AlphaCode3 = "ZAF",
                            Description = "South Africa",
                            NumericCode = "710"
                        },
                        new
                        {
                            Id = 207,
                            AlphaCode2 = "GS",
                            AlphaCode3 = "SGS",
                            Description = "South Georgia and the South Sandwich Islands",
                            NumericCode = "239"
                        },
                        new
                        {
                            Id = 208,
                            AlphaCode2 = "SS",
                            AlphaCode3 = "SSD",
                            Description = "South Sudan",
                            NumericCode = "728"
                        },
                        new
                        {
                            Id = 209,
                            AlphaCode2 = "ES",
                            AlphaCode3 = "ESP",
                            Description = "Spain",
                            NumericCode = "724"
                        },
                        new
                        {
                            Id = 210,
                            AlphaCode2 = "LK",
                            AlphaCode3 = "LKA",
                            Description = "Sri Lanka",
                            NumericCode = "144"
                        },
                        new
                        {
                            Id = 211,
                            AlphaCode2 = "SD",
                            AlphaCode3 = "SDN",
                            Description = "Sudan (the)",
                            NumericCode = "729"
                        },
                        new
                        {
                            Id = 212,
                            AlphaCode2 = "SR",
                            AlphaCode3 = "SUR",
                            Description = "Suriname",
                            NumericCode = "740"
                        },
                        new
                        {
                            Id = 213,
                            AlphaCode2 = "SJ",
                            AlphaCode3 = "SJM",
                            Description = "Svalbard and Jan Mayen",
                            NumericCode = "744"
                        },
                        new
                        {
                            Id = 214,
                            AlphaCode2 = "SE",
                            AlphaCode3 = "SWE",
                            Description = "Sweden",
                            NumericCode = "752"
                        },
                        new
                        {
                            Id = 215,
                            AlphaCode2 = "CH",
                            AlphaCode3 = "CHE",
                            Description = "Switzerland",
                            NumericCode = "756"
                        },
                        new
                        {
                            Id = 216,
                            AlphaCode2 = "SY",
                            AlphaCode3 = "SYR",
                            Description = "Syrian Arab Republic",
                            NumericCode = "760"
                        },
                        new
                        {
                            Id = 217,
                            AlphaCode2 = "TW",
                            AlphaCode3 = "TWN",
                            Description = "Taiwan (Province of China)",
                            NumericCode = "158"
                        },
                        new
                        {
                            Id = 218,
                            AlphaCode2 = "TJ",
                            AlphaCode3 = "TJK",
                            Description = "Tajikistan",
                            NumericCode = "762"
                        },
                        new
                        {
                            Id = 219,
                            AlphaCode2 = "TZ",
                            AlphaCode3 = "TZA",
                            Description = "Tanzania, United Republic of",
                            NumericCode = "834"
                        },
                        new
                        {
                            Id = 220,
                            AlphaCode2 = "TH",
                            AlphaCode3 = "THA",
                            Description = "Thailand",
                            NumericCode = "764"
                        },
                        new
                        {
                            Id = 221,
                            AlphaCode2 = "TL",
                            AlphaCode3 = "TLS",
                            Description = "Timor-Leste",
                            NumericCode = "626"
                        },
                        new
                        {
                            Id = 222,
                            AlphaCode2 = "TG",
                            AlphaCode3 = "TGO",
                            Description = "Togo",
                            NumericCode = "768"
                        },
                        new
                        {
                            Id = 223,
                            AlphaCode2 = "TK",
                            AlphaCode3 = "TKL",
                            Description = "Tokelau",
                            NumericCode = "772"
                        },
                        new
                        {
                            Id = 224,
                            AlphaCode2 = "TO",
                            AlphaCode3 = "TON",
                            Description = "Tonga",
                            NumericCode = "776"
                        },
                        new
                        {
                            Id = 225,
                            AlphaCode2 = "TT",
                            AlphaCode3 = "TTO",
                            Description = "Trinidad and Tobago",
                            NumericCode = "780"
                        },
                        new
                        {
                            Id = 226,
                            AlphaCode2 = "TN",
                            AlphaCode3 = "TUN",
                            Description = "Tunisia",
                            NumericCode = "788"
                        },
                        new
                        {
                            Id = 227,
                            AlphaCode2 = "TR",
                            AlphaCode3 = "TUR",
                            Description = "Turkey",
                            NumericCode = "792"
                        },
                        new
                        {
                            Id = 228,
                            AlphaCode2 = "TM",
                            AlphaCode3 = "TKM",
                            Description = "Turkmenistan",
                            NumericCode = "795"
                        },
                        new
                        {
                            Id = 229,
                            AlphaCode2 = "TC",
                            AlphaCode3 = "TCA",
                            Description = "Turks and Caicos Islands (the)",
                            NumericCode = "796"
                        },
                        new
                        {
                            Id = 230,
                            AlphaCode2 = "TV",
                            AlphaCode3 = "TUV",
                            Description = "Tuvalu",
                            NumericCode = "798"
                        },
                        new
                        {
                            Id = 231,
                            AlphaCode2 = "UG",
                            AlphaCode3 = "UGA",
                            Description = "Uganda",
                            NumericCode = "800"
                        },
                        new
                        {
                            Id = 232,
                            AlphaCode2 = "UA",
                            AlphaCode3 = "UKR",
                            Description = "Ukraine",
                            NumericCode = "804"
                        },
                        new
                        {
                            Id = 233,
                            AlphaCode2 = "AE",
                            AlphaCode3 = "ARE",
                            Description = "United Arab Emirates (the)",
                            NumericCode = "784"
                        },
                        new
                        {
                            Id = 234,
                            AlphaCode2 = "GB",
                            AlphaCode3 = "GBR",
                            Description = "United Kingdom of Great Britain and Northern Ireland (the)",
                            NumericCode = "826"
                        },
                        new
                        {
                            Id = 235,
                            AlphaCode2 = "UM",
                            AlphaCode3 = "UMI",
                            Description = "United States Minor Outlying Islands (the)",
                            NumericCode = "581"
                        },
                        new
                        {
                            Id = 236,
                            AlphaCode2 = "US",
                            AlphaCode3 = "USA",
                            Description = "United States of America (the)",
                            NumericCode = "840"
                        },
                        new
                        {
                            Id = 237,
                            AlphaCode2 = "UY",
                            AlphaCode3 = "URY",
                            Description = "Uruguay",
                            NumericCode = "858"
                        },
                        new
                        {
                            Id = 238,
                            AlphaCode2 = "UZ",
                            AlphaCode3 = "UZB",
                            Description = "Uzbekistan",
                            NumericCode = "860"
                        },
                        new
                        {
                            Id = 239,
                            AlphaCode2 = "VU",
                            AlphaCode3 = "VUT",
                            Description = "Vanuatu",
                            NumericCode = "548"
                        },
                        new
                        {
                            Id = 240,
                            AlphaCode2 = "VE",
                            AlphaCode3 = "VEN",
                            Description = "Venezuela (Bolivarian Republic of)",
                            NumericCode = "862"
                        },
                        new
                        {
                            Id = 241,
                            AlphaCode2 = "VN",
                            AlphaCode3 = "VNM",
                            Description = "Viet Nam",
                            NumericCode = "704"
                        },
                        new
                        {
                            Id = 242,
                            AlphaCode2 = "VG",
                            AlphaCode3 = "VGB",
                            Description = "Virgin Islands (British)",
                            NumericCode = "92"
                        },
                        new
                        {
                            Id = 243,
                            AlphaCode2 = "VI",
                            AlphaCode3 = "VIR",
                            Description = "Virgin Islands (U.S.)",
                            NumericCode = "850"
                        },
                        new
                        {
                            Id = 244,
                            AlphaCode2 = "WF",
                            AlphaCode3 = "WLF",
                            Description = "Wallis and Futuna",
                            NumericCode = "876"
                        },
                        new
                        {
                            Id = 245,
                            AlphaCode2 = "EH",
                            AlphaCode3 = "ESH",
                            Description = "Western Sahara",
                            NumericCode = "732"
                        },
                        new
                        {
                            Id = 246,
                            AlphaCode2 = "YE",
                            AlphaCode3 = "YEM",
                            Description = "Yemen",
                            NumericCode = "887"
                        },
                        new
                        {
                            Id = 247,
                            AlphaCode2 = "ZM",
                            AlphaCode3 = "ZMB",
                            Description = "Zambia",
                            NumericCode = "894"
                        },
                        new
                        {
                            Id = 248,
                            AlphaCode2 = "ZW",
                            AlphaCode3 = "ZWE",
                            Description = "Zimbabwe",
                            NumericCode = "716"
                        },
                        new
                        {
                            Id = 249,
                            AlphaCode2 = "AX",
                            AlphaCode3 = "ALA",
                            Description = "Åland Islands",
                            NumericCode = "248"
                        });
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("ConfigGenericGenderGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfigGenericGenderId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfigGenericNationalityGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfigGenericNationalityId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfigGenericProfessionGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfigGenericProfessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deceased")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("ConfigGenericGenderGroupId", "ConfigGenericGenderId");

                    b.HasIndex("ConfigGenericNationalityGroupId", "ConfigGenericNationalityId");

                    b.HasIndex("ConfigGenericProfessionGroupId", "ConfigGenericProfessionId");

                    b.ToTable("Peoples");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.PeopleAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("Box")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ConfigGenericTypeGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigGenericTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("PeopleId");

                    b.HasIndex("ConfigGenericTypeGroupId", "ConfigGenericTypeId");

                    b.ToTable("PeopleAddresses");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.PeopleAttribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ConfigGenericTypeGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigGenericTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.HasIndex("ConfigGenericTypeGroupId", "ConfigGenericTypeId");

                    b.ToTable("PeopleAttributions");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.PeopleInternetInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ConfigGenericTypeGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigGenericTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsObsolete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.HasIndex("ConfigGenericTypeGroupId", "ConfigGenericTypeId");

                    b.ToTable("PeoplesInternetInformations");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.PeoplePhoneInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ConfigGenericTypeGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigGenericTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsObsolete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("PeopleId");

                    b.HasIndex("ConfigGenericTypeGroupId", "ConfigGenericTypeId");

                    b.ToTable("PeoplesPhoneInformations");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.RefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedByIpv4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByIpv6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIpv4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevokedByIpv6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.SystemDataType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Comment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("IsList")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("SystemDataTypes");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.Colony", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "ColonyType")
                        .WithMany("Colonies")
                        .HasForeignKey("ConfigGenericTypeGroupId", "ConfigGenericTypeId")
                        .HasConstraintName("FK_Colony_ConfigGenericItem")
                        .IsRequired();

                    b.Navigation("ColonyType");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ColonyBuilding", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.Colony", "Colony")
                        .WithMany("ColonyBuildings")
                        .HasForeignKey("ColonyId")
                        .HasConstraintName("FK_Colony_ColonyBuilding")
                        .IsRequired();

                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "ColonyBuidingType")
                        .WithMany("ColonyBuildings")
                        .HasForeignKey("ConfigGenericTypeGroupId", "ConfigGenericTypeId")
                        .HasConstraintName("FK_ColonyBuilding_ConfigGenericItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colony");

                    b.Navigation("ColonyBuidingType");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ColonyBuildingRoom", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.ColonyBuilding", "ColonyBuilding")
                        .WithMany("ColonyBuildingRooms")
                        .HasForeignKey("ColonyBuildingId")
                        .HasConstraintName("FK_ColonyBuildingRoom_ColonyBuilding")
                        .IsRequired();

                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "ColonyBuildingRoomType")
                        .WithMany("ColonyBuildingRooms")
                        .HasForeignKey("ConfigGenericGroupTypeId", "ConfigGenericTypeId")
                        .HasConstraintName("FK_ColonyBuildingRoom_ConfigGenericItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColonyBuilding");

                    b.Navigation("ColonyBuildingRoomType");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericItem", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericGroup", "ConfigGenericGroup")
                        .WithMany("ConfigGenericItems")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_ConfigGenericItems_ConfigGenericGroups")
                        .IsRequired();

                    b.Navigation("ConfigGenericGroup");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericItemExtension", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.SystemDataType", "SystemDataType")
                        .WithMany("ConfigGenericItemExtensions")
                        .HasForeignKey("SystemDataTypeId")
                        .HasConstraintName("FK_ConfigGenericItemExtentions_SystemDataTypes")
                        .IsRequired();

                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "ConfigGenericItem")
                        .WithMany("ConfigGenericItemExtensions")
                        .HasForeignKey("GroupId", "ItemId")
                        .HasConstraintName("FK_ConfigGenericItemExtentions_ConfigGenericItems")
                        .IsRequired();

                    b.Navigation("ConfigGenericItem");

                    b.Navigation("SystemDataType");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericItemExtensionValue", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItemExtension", "ConfigGenericItemExtension")
                        .WithMany("ConfigGenericItemExtensionValues")
                        .HasForeignKey("ExtentionId", "GroupId", "ItemId")
                        .HasConstraintName("FK_ConfigGenericItemExtentionValues_ConfigGenericItemExtentions")
                        .IsRequired();

                    b.Navigation("ConfigGenericItemExtension");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.People", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "Gender")
                        .WithMany("PeopleGenders")
                        .HasForeignKey("ConfigGenericGenderGroupId", "ConfigGenericGenderId")
                        .HasConstraintName("FK_People_ConfigGenericItem_Genders");

                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "Nationality")
                        .WithMany("PeopleNationalities")
                        .HasForeignKey("ConfigGenericNationalityGroupId", "ConfigGenericNationalityId")
                        .HasConstraintName("FK_People_ConfigGenericItem_Nationalities");

                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "Profession")
                        .WithMany("PeopleProfessions")
                        .HasForeignKey("ConfigGenericProfessionGroupId", "ConfigGenericProfessionId")
                        .HasConstraintName("FK_People_ConfigGenericItem_Professions");

                    b.Navigation("Gender");

                    b.Navigation("Nationality");

                    b.Navigation("Profession");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.PeopleAddress", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.Country", "Country")
                        .WithMany("Addresses")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_PeopleAddress_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColonyManager.Data.Entities.People", "People")
                        .WithMany("Addresses")
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "Type")
                        .WithMany("Addresses")
                        .HasForeignKey("ConfigGenericTypeGroupId", "ConfigGenericTypeId")
                        .HasConstraintName("FK_PeopleAddress_Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("People");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.PeopleAttribution", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.People", "People")
                        .WithMany("PeopleAttributions")
                        .HasForeignKey("PeopleId")
                        .HasConstraintName("FK_PeopleAttributions_Peoples")
                        .IsRequired();

                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "AttributionType")
                        .WithMany("PeopleAttributions")
                        .HasForeignKey("ConfigGenericTypeGroupId", "ConfigGenericTypeId")
                        .HasConstraintName("FK_PeopleAttribution_ConfigGenericType")
                        .IsRequired();

                    b.Navigation("AttributionType");

                    b.Navigation("People");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.PeopleInternetInformation", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.People", "People")
                        .WithMany("InternetInformations")
                        .HasForeignKey("PeopleId")
                        .HasConstraintName("FK_PeopleInternetInformation_People")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "Type")
                        .WithMany("PeopleInternetInformations")
                        .HasForeignKey("ConfigGenericTypeGroupId", "ConfigGenericTypeId")
                        .HasConstraintName("FK_PeopleInternetInformation_ConfigGenericType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.PeoplePhoneInformation", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.People", "People")
                        .WithMany("PhoneInformations")
                        .HasForeignKey("PeopleId")
                        .HasConstraintName("FK_PeoplePhoneInformation_People")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColonyManager.Data.Entities.ConfigGenericItem", "Type")
                        .WithMany("PeoplePhoneInformations")
                        .HasForeignKey("ConfigGenericTypeGroupId", "ConfigGenericTypeId")
                        .HasConstraintName("FK_PeoplePhoneInformation_ConfigGenericType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.RefreshToken", b =>
                {
                    b.HasOne("ColonyManager.Data.Entities.Account", "Account")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.Account", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.Colony", b =>
                {
                    b.Navigation("ColonyBuildings");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ColonyBuilding", b =>
                {
                    b.Navigation("ColonyBuildingRooms");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericGroup", b =>
                {
                    b.Navigation("ConfigGenericItems");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericItem", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Colonies");

                    b.Navigation("ColonyBuildingRooms");

                    b.Navigation("ColonyBuildings");

                    b.Navigation("ConfigGenericItemExtensions");

                    b.Navigation("PeopleAttributions");

                    b.Navigation("PeopleGenders");

                    b.Navigation("PeopleInternetInformations");

                    b.Navigation("PeopleNationalities");

                    b.Navigation("PeoplePhoneInformations");

                    b.Navigation("PeopleProfessions");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.ConfigGenericItemExtension", b =>
                {
                    b.Navigation("ConfigGenericItemExtensionValues");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.Country", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.People", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("InternetInformations");

                    b.Navigation("PeopleAttributions");

                    b.Navigation("PhoneInformations");
                });

            modelBuilder.Entity("ColonyManager.Data.Entities.SystemDataType", b =>
                {
                    b.Navigation("ConfigGenericItemExtensions");
                });
#pragma warning restore 612, 618
        }
    }
}
